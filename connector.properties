#name=mm2-cpc
connector.class=org.apache.kafka.connect.mirror.MirrorCheckpointConnector
clusters=prim,sec
source.cluster.alias=prim
source.cluster.bootstrap.servers=b-1.sedrpsource.eqv29x.c6.kafka.us-west-2.amazonaws.com:9092,b-2.sedrpsource.eqv29x.c6.kafka.us-west-2.amazonaws.com:9092
source.cluster.security.protoco=PLAINTEXT
target.cluster.alias=sec
target.cluster.bootstrap.servers=b-1.sedrptarget.7chjcb.c6.kafka.us-west-2.amazonaws.com:9092,b-2.sedrptarget.7chjcb.c6.kafka.us-west-2.amazonaws.com:9092
target.cluster.security.protocol=PLAINTEXT
tasks.max=2
key.converter=org.apache.kafka.connect.converters.ByteArrayConverter
value.converter=org.apache.kafka.connect.converters.ByteArrayConverter
replication.factor=2
checkpoints.topic.replication.factor=2
emit.checkpoints.interval.seconds=20
emit.checkpoints.enabled=true
sync.group.offsets.enabled=true
sync.group.offsets.interval.seconds=10
replication.policy.separator= 
source.cluster.alias= 
target.cluster.alias= 
# replication.policy.class=org.apache.kafka.connect.mirror.IdentityReplicationPolicy
#replication.policy.class=com.amazonaws.kafka.samples.CustomMM2ReplicationPolicy


#name=mm2-hbc
connector.class=org.apache.kafka.connect.mirror.MirrorHeartbeatConnector
clusters=prim, sec
source.cluster.alias=prim
source.cluster.bootstrap.servers=-b-1.sedrpsource.eqv29x.c6.kafka.us-west-2.amazonaws.com:9092,b-2.sedrpsource.eqv29x.c6.kafka.us-west-2.amazonaws.com:9092
source.cluster.security.protocol=PLAINTEXT
target.cluster.alias=sec
target.cluster.bootstrap.servers=b-1.sedrptarget.7chjcb.c6.kafka.us-west-2.amazonaws.com:9092,b-2.sedrptarget.7chjcb.c6.kafka.us-west-2.amazonaws.com:9092
tasks.max=2
key.converter= org.apache.kafka.connect.converters.ByteArrayConverter
value.converter=org.apache.kafka.connect.converters.ByteArrayConverter
replication.factor=2
heartbeats.topic.replication.factor=2
emit.heartbeats.interval.seconds=20
replication.policy.class=org.apache.kafka.connect.mirror.IdentityReplicationPolicy
replication.policy.separator= 
source.cluster.alias= 
target.cluster.alias= 
# replication.policy.class=com.amazonaws.kafka.samples.CustomMM2ReplicationPolicy


#name=mm2-msc
connector.class=org.apache.kafka.connect.mirror.MirrorSourceConnector
clusters=prim, sec
source.cluster.alias=prim
source.cluster.bootstrap.servers=b-1.sedrpsource.eqv29x.c6.kafka.us-west-2.amazonaws.com:9092,b-2.sedrpsource.eqv29x.c6.kafka.us-west-2.amazonaws.com:9092
source.cluster.security.protocol=PLAINTEXT
target.cluster.alias=sec
target.cluster.bootstrap.servers=b-1.sedrptarget.7chjcb.c6.kafka.us-west-2.amazonaws.com:9092,b-2.sedrptarget.7chjcb.c6.kafka.us-west-2.amazonaws.com:9092
target.cluster.security.protocol=PLAINTEXT
topics=.*
tasks.max=3
key.converter= org.apache.kafka.connect.converters.ByteArrayConverter
value.converter=org.apache.kafka.connect.converters.ByteArrayConverter
replication.factor=2
offset-syncs.topic.replication.factor=1
sync.topic.acls.interval.seconds=20
sync.topic.configs.interval.seconds=20
refresh.topics.interval.seconds=20
refresh.groups.interval.seconds=20
consumer.group.id=mm2-msc
producer.enable.idempotence=true
# Can do this when 
#replication.policy.class=org.apache.kafka.connect.mirror.IdentityReplicationPolicy
replication.policy.separator= 
source.cluster.alias= 
target.cluster.alias= 
#replication.policy.class=com.amazonaws.kafka.samples.CustomMM2ReplicationPolicy


arn:aws:logs:us-west-2:054267740449:log-group:se-msk-drp-mm:*